# .github/workflows/ssl_expiry.yml
name: ssl_expiry

on:
  schedule:
    - cron: "17 2 * * *"   # nightly
  workflow_dispatch:        # manual button
  push:
    branches: [ main ]      # only main pushes

jobs:
  check:
    if: github.ref == 'refs/heads/main' || github.event_name != 'push'
    runs-on: ubuntu-latest
    env:
      # Edit this list to match your domains/subdomains
      DOMAINS: |
        adif-mcp.com
        www.adif-mcp.com
        lotw.adif-mcp.com
        eqsl.adif-mcp.com
      THRESHOLD_DAYS: "15"
    steps:
      - name: Show inputs
        run: |
          echo "Domains to check:"
          echo "${DOMAINS}"
          echo "Threshold: ${THRESHOLD_DAYS} days"

      - name: Check certificate expiry
        id: check
        shell: bash
        run: |
          set -euo pipefail

          NOW_EPOCH=$(date +%s)
          FAIL=0
          printf "| Domain | Not After (UTC) | Days Left |\n" >> "$GITHUB_STEP_SUMMARY"
          printf "|---|---:|---:|\n" >> "$GITHUB_STEP_SUMMARY"

          while IFS= read -r DOMAIN; do
            [[ -z "$DOMAIN" ]] && continue

            # Pull leaf cert and extract notAfter
            ENDDATE_RAW=$(echo | \
              openssl s_client -servername "$DOMAIN" -connect "$DOMAIN:443" 2>/dev/null | \
              openssl x509 -noout -enddate | cut -d= -f2 || true)

            if [[ -z "$ENDDATE_RAW" ]]; then
              echo "ERROR: Could not retrieve certificate for $DOMAIN"
              printf "| %s | %s | %s |\n" "$DOMAIN" "**ERROR**" "-" >> "$GITHUB_STEP_SUMMARY"
              FAIL=1
              continue
            fi

            # Convert to epoch (GNU date on ubuntu-latest)
            END_EPOCH=$(date -u -d "$ENDDATE_RAW" +%s)
            SECS_LEFT=$(( END_EPOCH - NOW_EPOCH ))
            DAYS_LEFT=$(( SECS_LEFT / 86400 ))

            # Summary row
            printf "| %s | %s | %d |\n" "$DOMAIN" "$ENDDATE_RAW" "$DAYS_LEFT" >> "$GITHUB_STEP_SUMMARY"

            # Hard fail if under threshold
            if (( DAYS_LEFT < THRESHOLD_DAYS )); then
              echo "WARN: $DOMAIN has ${DAYS_LEFT} day(s) left (< ${THRESHOLD_DAYS})."
              FAIL=1
            fi
          done <<< "$DOMAINS"

          if (( FAIL > 0 )); then
            echo "::error title=SSL expiry alert::One or more certs are below ${THRESHOLD_DAYS} days."
            exit 1
          fi

          echo "All certificates are healthy (>= ${THRESHOLD_DAYS} days)."
